{"version":3,"sources":["Home.js","NavigationBar.js","Substitution.js","RailFence.js","PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Home","href","NavigationBar","className","to","normalise","words","arr","seen","retArr","i","length","push","join","removeDuplicates","toLowerCase","replace","alphabet","Substitution","props","encrypt","secret","plain","ciphertext","fullAlphabet","toUpperCase","fullCiphertext","split","map","x","indexOf","decrypt","cipher","crack","plainMessage","cipherMessage","plainTextChange","event","state","mode","setState","target","value","cipherTextChange","secretTextChange","handleOptionChange","cite","title","htmlFor","onChange","this","id","type","readOnly","Component","mod","a","b","zigzagmod","Math","min","compareBy","c","isString","String","RailFence","reduce","item","Array","from","n","keys","z","sort","d","secretChange","Number","parseInt","aria-invalid","PageNotFound","App","path","exact","component","Boolean","window","location","hostname","match","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ce1cc7c.chunk.js","sourcesContent":["import React, { Fragment } from \"react\"\n\nconst Home = () => (\n\t<Fragment>\n\t\t<h2>Home</h2>\n\t\t<p>\n\t\t\tWant to learn about cryptography? Try{\" \"}\n\t\t\t<a href=\"https://en.wikipedia.org/wiki/Cryptography\">wikipedia</a> or{\" \"}\n\t\t\t<a href=\"https://www.khanacademy.org/computing/computer-science/cryptography\">\n\t\t\t\tKhan Academy\n\t\t\t</a>\n\t\t\t.\n\t\t</p>\n\t</Fragment>\n)\n\nexport default Home\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst NavigationBar = () => (\n\t<nav className=\"row\">\n\t\t<Link to=\"\" className=\"one column\">\n\t\t\tHome\n\t\t</Link>\n\t\t<Link to=\"/substitution\" className=\"three columns\">\n\t\t\tSubstitution ciphers\n\t\t</Link>\n\t\t<Link to=\"/railfence\" className=\"three columns\">\n\t\t\tRail Fence Cipher\n\t\t</Link>\n\t</nav>\n)\n\nexport default NavigationBar\n","import React, { Component, Fragment } from \"react\"\nimport \"./main.css\"\n\nconst removeDuplicates = arr => {\n\tvar seen = {}\n\tvar retArr = []\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (!(arr[i] in seen)) {\n\t\t\tretArr.push(arr[i])\n\t\t\tseen[arr[i]] = true\n\t\t}\n\t}\n\treturn retArr.join(\"\")\n}\nconst normalise = words => {\n\treturn removeDuplicates(words.toLowerCase().replace(/[^a-z]/g, \"\"))\n}\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nclass Substitution extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: \"\",\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullAlphabet.indexOf(x) > -1\n\t\t\t\t\t? fullCiphertext[fullAlphabet.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn cipher\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullCiphertext.indexOf(x) > -1\n\t\t\t\t\t? fullAlphabet[fullCiphertext.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tcrack = (plain, cipher) => {\n\t\tconst plainMessage = normalise(plain)\n\t\tconst cipherMessage = normalise(cipher)\n\t\treturn alphabet\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tplainMessage.indexOf(x) > -1\n\t\t\t\t\t? cipherMessage[plainMessage.indexOf(x)]\n\t\t\t\t\t: \"_\"\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tplainTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tsecret: this.crack(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\tcipherTextChange = event => {\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: this.crack(this.state.plain, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t}\n\tsecretTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tcipher: this.encrypt(event.target.value, this.state.plain)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tplain: this.decrypt(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>Substitution cipher</h2>\n\t\t\t\t<blockquote cite=\"https://en.wikipedia.org/wiki/Substitution_cipher\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Cryptography\"\n\t\t\t\t\t\t\ttitle=\"Cryptography\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcryptography\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t, a <b>substitution cipher</b> is a method of{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Encrypting\"\n\t\t\t\t\t\t\ttitle=\"Encrypting\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tencrypting\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tby which units of{\" \"}\n\t\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Plaintext\" title=\"Plaintext\">\n\t\t\t\t\t\t\tplaintext\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tare replaced with{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Ciphertext\"\n\t\t\t\t\t\t\ttitle=\"Ciphertext\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tciphertext\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t, according to a fixed system; the \"units\" may be single letters\n\t\t\t\t\t\t(the most common), pairs of letters, triplets of letters, mixtures\n\t\t\t\t\t\tof the above, and so forth. The receiver deciphers the text by\n\t\t\t\t\t\tperforming the inverse substitution. -- wikipedia\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t\t<option value=\"decrypt\">Decrypt</option>\n\t\t\t\t\t\t<option value=\"crack\">Crack</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">Secret key: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"crack\"}\n\t\t\t\t\t\tonChange={this.secretTextChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"decrypt\"}\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default Substitution\n","import React, { Component, Fragment } from \"react\"\nimport \"./main.css\"\n\nconst mod = (a, b) => ((a % b) + b) % b\nconst zigzagmod = (a, b) => Math.min(mod(a, 2 * b - 2), mod(-a, 2 * b - 2))\nconst copiesOf = (length, item) => Array.from(Array(length), () => item)\nconst compareBy = c => (a, b) => a[c] - b[c]\nconst compareByThen = (c, d) => (a, b) =>\n\tcompareBy(c)(a, b) === 0 ? compareBy(d)(a, b) : compareBy(c)(a, b)\nconst range = n => Array.from(Array(n).keys())\nconst isString = x => typeof x === \"string\" || x instanceof String\n\nclass RailFence extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: 3,\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tif (secret === 1) {\n\t\t\treturn plain\n\t\t}\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.reduce((a, x, i) => {\n\t\t\t\ta[zigzagmod(i, secret)] += x\n\t\t\t\treturn a\n\t\t\t}, copiesOf(secret, \"\"))\n\t\t\t.reduce((a, b) => a + b, \"\")\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tif (secret === 1) {\n\t\t\treturn cipher\n\t\t}\n\t\treturn range(cipher.length)\n\t\t\t.map(i => ({ i: i, z: zigzagmod(i, secret) }))\n\t\t\t.sort(compareByThen(\"z\", \"i\"))\n\t\t\t.map((a, i) => {\n\t\t\t\ta[\"c\"] = cipher[i]\n\t\t\t\treturn a\n\t\t\t})\n\t\t\t.sort(compareBy(\"i\"))\n\t\t\t.map(a => a[\"c\"])\n\t\t\t.join(\"\")\n\t}\n\n\tplainTextChange = event => {\n\t\tif (isString(this.state.secret)) {\n\t\t\tthis.setState({ plain: event.target.value })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t\t})\n\t\t}\n\t}\n\tcipherTextChange = event => {\n\t\tif (isString(this.state.secret)) {\n\t\t\tthis.setState({ cipher: event.target.value })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t}\n\tsecretChange = event => {\n\t\tif (event.target.value === \"\" || Number.parseInt(event.target.value) <= 0) {\n\t\t\tthis.setState({ secret: event.target.value })\n\t\t\treturn\n\t\t}\n\t\tconst secret = Number.parseInt(event.target.value)\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: secret,\n\t\t\t\tcipher: this.encrypt(secret, this.state.plain)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: secret,\n\t\t\t\tplain: this.decrypt(secret, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>Rail Fence Cipher</h2>\n\t\t\t\t<blockquote cite=\"https://en.wikipedia.org/wiki/Rail_fence_cipher\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe <strong>rail fence cipher</strong> (also called a{\" \"}\n\t\t\t\t\t\t<strong>zigzag cipher</strong>) is a form of{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\n\t\t\t\t\t\t\ttitle=\"Transposition cipher\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\ttransposition cipher\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t. It derives its name from the way in which it is encoded. --\n\t\t\t\t\t\twikipedia\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t\t<option value=\"decrypt\">Decrypt</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">Number of rails: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\taria-invalid={isString(this.state.secret)}\n\t\t\t\t\t\tonChange={this.secretChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"decrypt\"}\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default RailFence\n","import React from \"react\"\n\nconst PageNotFound = () => (\n\t<h2>Stop messing around trying to find secret pages...</h2>\n)\n\nexport default PageNotFound\n","import React, { Fragment } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Home from \"./Home\"\nimport NavigationBar from \"./NavigationBar\"\nimport Substitution from \"./Substitution\"\nimport RailFence from \"./RailFence\"\nimport PageNotFound from \"./PageNotFound\"\n\nconst App = () => (\n\t<Fragment>\n\t\t<NavigationBar />\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t<Route path=\"/substitution\" component={Substitution} />\n\t\t\t<Route path=\"/railfence\" component={RailFence} />\n\t\t\t<Route component={PageNotFound} />\n\t\t</Switch>\n\t</Fragment>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst app = (\n\t<BrowserRouter basename=\"/cryptography\">\n\t\t<App />\n\t</BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}