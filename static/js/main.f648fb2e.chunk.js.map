{"version":3,"sources":["Home.js","NavigationBar.js","Substitution.js","PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Home","NavigationBar","className","to","normalise","words","arr","seen","retArr","i","length","push","join","removeDuplicates","toLowerCase","replace","alphabet","Substitution","props","encrypt","secret","plain","ciphertext","fullAlphabet","toUpperCase","fullCiphertext","split","map","x","indexOf","decrypt","cipher","crack","plainMessage","cipherMessage","plainTextChange","event","state","mode","setState","target","value","cipherTextChange","secretTextChange","handleOptionChange","htmlFor","onChange","this","id","type","readOnly","Component","PageNotFound","App","path","exact","component","Boolean","window","location","hostname","match","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f648fb2e.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Home = () => <h2>Home</h2>\n\nexport default Home\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst NavigationBar = () => (\n\t<nav className=\"row\">\n\t\t<Link to=\"\" className=\"one column\">\n\t\t\tHome\n\t\t</Link>\n\t\t<Link to=\"/substitution\" className=\"three columns\">\n\t\t\tSubstitution ciphers\n\t\t</Link>\n\t</nav>\n)\n\nexport default NavigationBar\n","import React, { Component } from \"react\"\nimport \"./Substitution.css\"\n\nconst removeDuplicates = arr => {\n\tvar seen = {}\n\tvar retArr = []\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (!(arr[i] in seen)) {\n\t\t\tretArr.push(arr[i])\n\t\t\tseen[arr[i]] = true\n\t\t}\n\t}\n\treturn retArr.join(\"\")\n}\nconst normalise = words => {\n\treturn removeDuplicates(words.toLowerCase().replace(/[^a-z]/g, \"\"))\n}\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nclass Substitution extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: \"\",\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullAlphabet.indexOf(x) > -1\n\t\t\t\t\t? fullCiphertext[fullAlphabet.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn cipher\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullCiphertext.indexOf(x) > -1\n\t\t\t\t\t? fullAlphabet[fullCiphertext.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tcrack = (plain, cipher) => {\n\t\tconst plainMessage = normalise(plain)\n\t\tconst cipherMessage = normalise(cipher)\n\t\treturn alphabet\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tplainMessage.indexOf(x) > -1\n\t\t\t\t\t? cipherMessage[plainMessage.indexOf(x)]\n\t\t\t\t\t: \"_\"\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tplainTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tsecret: this.crack(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\tcipherTextChange = event => {\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: this.crack(this.state.plain, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t}\n\tsecretTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tcipher: this.encrypt(event.target.value, this.state.plain)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tplain: this.decrypt(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t\t<option value=\"decrypt\">decrypt</option>\n\t\t\t\t\t\t<option value=\"crack\">crack</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">Secret key: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"crack\"}\n\t\t\t\t\t\tonChange={this.secretTextChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"decrypt\"}\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t)\n\t}\n}\nexport default Substitution\n","import React from \"react\"\n\nconst PageNotFound = () => (\n\t<h2>Stop messing around trying to find secret pages...</h2>\n)\n\nexport default PageNotFound\n","import React, { Component, Fragment } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Home from \"./Home\"\nimport NavigationBar from \"./NavigationBar\"\nimport Substitution from \"./Substitution\"\nimport PageNotFound from \"./PageNotFound\"\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<NavigationBar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/substitution\" component={Substitution} />\n\t\t\t\t\t<Route component={PageNotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst app = (\n\t<BrowserRouter basename=\"/cryptography\">\n\t\t<App />\n\t</BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}