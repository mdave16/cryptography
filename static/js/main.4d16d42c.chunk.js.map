{"version":3,"sources":["Home.js","Substitution.js","PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","removeDuplicates","arr","seen","retArr","i","length","push","join","alphabet","Substitution","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","encrypt","secret","plain","ciphertext","normalise","fullAlphabet","toUpperCase","fullCiphertext","split","map","x","indexOf","decrypt","cipher","crack","plainMessage","cipherMessage","words","toLowerCase","replace","plainTextChange","event","state","setState","target","value","cipherTextChange","secretTextChange","handleOptionChange","type","name","checked","onChange","disabled","Component","PageNotFound","App","react_router_dom","basename","to","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d16d42c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => <h2>Home</h2>\n\nexport default Home\n","import React, { Component } from \"react\";\n\nconst removeDuplicates = (arr) => {\n\t    var seen = {};\n\t    var retArr = [];\n\t    for (var i = 0; i < arr.length; i++) {\n\t        if (!(arr[i] in seen)) {\n\t            retArr.push(arr[i]);\n\t            seen[arr[i]] = true;\n\t        }\n\t    }\n\t    return retArr.join('');\n}\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nclass Substitution extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      plain: \"\",\n      cipher: \"\",\n      secret: \"\",\n\t\t\tencrypt: 'encrypt'\n    }\n  }\n\n\tencrypt = (secret, plain) => {\n\t\tconst ciphertext = this.normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn plain.split('').map(x => fullAlphabet.indexOf(x) > -1 ? fullCiphertext[fullAlphabet.indexOf(x)] : x).join('')\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tconst ciphertext = this.normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn cipher.split('').map(x => fullCiphertext.indexOf(x) > -1 ? fullAlphabet[fullCiphertext.indexOf(x)] : x).join('')\n\t}\n\n\tcrack = (plain, cipher) => {\n\t\tconst plainMessage = this.normalise(plain)\n\t\tconst cipherMessage = this.normalise(cipher)\n\t\treturn alphabet.split('').map(x => plainMessage.indexOf(x) > -1 ? cipherMessage[plainMessage.indexOf(x)] : '_').join('')\n\t}\n\n\tnormalise = (words) => {\n\t\tremoveDuplicates(words.toLowerCase().replace(/[^a-z]/g, ''))\n\t}\n\n  plainTextChange = event => {\n\t\tif(this.state.encrypt === 'encrypt') {\n\t\t\tthis.setState({\n\t      plain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t    })\n\t\t}\n\t\tif(this.state.encrypt === 'crack') {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tsecret: this.crack(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n  }\n  cipherTextChange = event => {\n\t\tif(this.state.encrypt === 'decrypt') {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t      cipher: event.target.value\n\t    })\n\t\t}\n\t\tif(this.state.encrypt === 'crack') {\n\t\t\tthis.setState({\n\t\t\t\tsecret: this.crack(this.state.plain, event.target.value),\n\t      cipher: event.target.value\n\t    })\n    }\n  }\n  secretTextChange = event => {\n\t\tif(this.state.encrypt === 'encrypt') {\n\t\t\tthis.setState({\n        secret: event.target.value,\n\t\t\t\tcipher: this.encrypt(event.target.value, this.state.plain)\n      })\n\t  }\n\t\tif(this.state.encrypt === 'decrypt') {\n\t\t\tthis.setState({\n        secret: event.target.value,\n\t\t\t\tplain: this.decrypt(event.target.value, this.state.cipher)\n      })\n\t  }\n  }\n  handleOptionChange = event => {\n    this.setState({\n      encrypt: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"encrypt\"\n            value=\"encrypt\"\n            checked={this.state.encrypt === 'encrypt'}\n            onChange={this.handleOptionChange}\n          />\n          Encrypt\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"encrypt\"\n            value=\"decrypt\"\n            checked={this.state.encrypt === 'decrypt'}\n            onChange={this.handleOptionChange}\n          />\n          Decrypt\n        </label>\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"encrypt\"\n\t\t\t\t\t\tvalue=\"crack\"\n\t\t\t\t\t\tchecked={this.state.encrypt === 'crack'}\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\tCrack\n\t\t\t\t</label>\n        <p>Secret key: </p>\n        <input type=\"text\" disabled={this.state.encrypt === 'crack'} onChange={this.secretTextChange} value={this.state.secret} />\n        <p>Decrypted message: </p>\n        <input type=\"text\" disabled={this.state.encrypt === 'decrypt'} onChange={this.plainTextChange}\n\t\t\t\tvalue={this.state.plain} />\n        <p>Encrypted message: </p>\n        <input type=\"text\" disabled={this.state.encrypt === 'encrypt'} onChange={this.cipherTextChange}\n\t\t\t\tvalue={this.state.cipher} />\n      </form>\n    );\n  }\n}\nexport default Substitution;\n","import React from 'react'\n\nconst PageNotFound = () => <h2>Stop messing around trying to find secret pages...</h2>\n\nexport default PageNotFound\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from './Home'\nimport Substitution from './Substitution'\nimport PageNotFound from './PageNotFound'\n\nclass App extends Component {\n  render() {\n    return (\n\t\t\t<Router basename=\"/cryptography\">\n\t      <div>\n\t        <nav>\n\t          <ul>\n\t            <li>\n\t              <Link to=\"/\">Home</Link>\n\t            </li>\n\t            <li>\n\t              <Link to=\"/substitution/\">Substitution ciphers</Link>\n\t            </li>\n\t          </ul>\n\t        </nav>\n\t      </div>\n\t\t\t\t<Switch>\n\t\t\t\t  <Route path=\"/\" exact component={Home} />\n\t\t\t\t  <Route path=\"/substitution\" component={Substitution} />\n\t\t\t\t\t<Route component={PageNotFound} />\n\t\t\t\t</Switch>\n\t    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}