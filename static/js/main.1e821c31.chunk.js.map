{"version":3,"sources":["Home.js","NavigationBar.js","Substitution.js","RailFence.js","Columnar.js","PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Home","href","NavigationBar","className","to","normalise","words","arr","seen","retArr","i","length","push","join","removeDuplicates","toLowerCase","replace","alphabet","Substitution","Component","constructor","props","super","encrypt","secret","plain","ciphertext","fullAlphabet","toUpperCase","fullCiphertext","split","map","x","indexOf","decrypt","cipher","crack","plainMessage","cipherMessage","plainTextChange","event","this","state","mode","setState","target","value","cipherTextChange","secretTextChange","handleOptionChange","render","cite","title","htmlFor","onChange","id","type","readOnly","mod","a","b","zigzagmod","Math","min","compareBy","c","isString","String","RailFence","reduce","item","Array","from","n","keys","z","sort","d","secretChange","v","isNaN","Number","parseInt","aria-invalid","Columnar","boxLength","xtraCharsNeeded","concat","acc","cur","idx","char","column","y","PageNotFound","App","path","exact","component","Boolean","window","location","hostname","match","app","basename","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e821c31.chunk.js","sourcesContent":["import React, { Fragment } from \"react\"\n\nconst Home = () => (\n\t<Fragment>\n\t\t<h2>Home</h2>\n\t\t<p>\n\t\t\tWant to learn about cryptography? Try{\" \"}\n\t\t\t<a href=\"https://en.wikipedia.org/wiki/Cryptography\">wikipedia</a> or{\" \"}\n\t\t\t<a href=\"https://www.khanacademy.org/computing/computer-science/cryptography\">\n\t\t\t\tKhan Academy\n\t\t\t</a>\n\t\t\t.\n\t\t</p>\n\t</Fragment>\n)\n\nexport default Home\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nconst NavigationBar = () => (\n\t<nav className=\"row\">\n\t\t<Link to=\"\" className=\"one column\">\n\t\t\tHome\n\t\t</Link>\n\t\t<Link to=\"/substitution\" className=\"three columns\">\n\t\t\tSubstitution ciphers\n\t\t</Link>\n\t\t<Link to=\"/railfence\" className=\"three columns\">\n\t\t\tRail Fence Cipher\n\t\t</Link>\n\t</nav>\n)\n\nexport default NavigationBar\n","import React, { Component, Fragment } from \"react\"\nimport \"./main.css\"\n\nconst removeDuplicates = arr => {\n\tvar seen = {}\n\tvar retArr = []\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (!(arr[i] in seen)) {\n\t\t\tretArr.push(arr[i])\n\t\t\tseen[arr[i]] = true\n\t\t}\n\t}\n\treturn retArr.join(\"\")\n}\nconst normalise = words => {\n\treturn removeDuplicates(words.toLowerCase().replace(/[^a-z]/g, \"\"))\n}\n\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nclass Substitution extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: \"\",\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullAlphabet.indexOf(x) > -1\n\t\t\t\t\t? fullCiphertext[fullAlphabet.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tconst ciphertext = normalise(secret + alphabet)\n\t\tconst fullAlphabet = alphabet + alphabet.toUpperCase()\n\t\tconst fullCiphertext = ciphertext + ciphertext.toUpperCase()\n\t\treturn cipher\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tfullCiphertext.indexOf(x) > -1\n\t\t\t\t\t? fullAlphabet[fullCiphertext.indexOf(x)]\n\t\t\t\t\t: x\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tcrack = (plain, cipher) => {\n\t\tconst plainMessage = normalise(plain)\n\t\tconst cipherMessage = normalise(cipher)\n\t\treturn alphabet\n\t\t\t.split(\"\")\n\t\t\t.map(x =>\n\t\t\t\tplainMessage.indexOf(x) > -1\n\t\t\t\t\t? cipherMessage[plainMessage.indexOf(x)]\n\t\t\t\t\t: \"_\"\n\t\t\t)\n\t\t\t.join(\"\")\n\t}\n\n\tplainTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tsecret: this.crack(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\tcipherTextChange = event => {\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"crack\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: this.crack(this.state.plain, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t}\n\tsecretTextChange = event => {\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tcipher: this.encrypt(event.target.value, this.state.plain)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: event.target.value,\n\t\t\t\tplain: this.decrypt(event.target.value, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>Substitution cipher</h2>\n\t\t\t\t<blockquote cite=\"https://en.wikipedia.org/wiki/Substitution_cipher\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Cryptography\"\n\t\t\t\t\t\t\ttitle=\"Cryptography\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcryptography\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t, a <b>substitution cipher</b> is a method of{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Encrypting\"\n\t\t\t\t\t\t\ttitle=\"Encrypting\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tencrypting\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tby which units of{\" \"}\n\t\t\t\t\t\t<a href=\"https://en.wikipedia.org/wiki/Plaintext\" title=\"Plaintext\">\n\t\t\t\t\t\t\tplaintext\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tare replaced with{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Ciphertext\"\n\t\t\t\t\t\t\ttitle=\"Ciphertext\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tciphertext\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t, according to a fixed system; the \"units\" may be single letters\n\t\t\t\t\t\t(the most common), pairs of letters, triplets of letters, mixtures\n\t\t\t\t\t\tof the above, and so forth. The receiver deciphers the text by\n\t\t\t\t\t\tperforming the inverse substitution. -- wikipedia\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t\t<option value=\"decrypt\">Decrypt</option>\n\t\t\t\t\t\t<option value=\"crack\">Crack</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">Secret key: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"crack\"}\n\t\t\t\t\t\tonChange={this.secretTextChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"decrypt\"}\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default Substitution\n","import React, { Component, Fragment } from \"react\"\nimport \"./main.css\"\n\nconst mod = (a, b) => ((a % b) + b) % b\nconst zigzagmod = (a, b) => Math.min(mod(a, 2 * b - 2), mod(-a, 2 * b - 2))\nconst copiesOf = (length, item) => Array.from(Array(length), () => item)\nconst compareBy = c => (a, b) => a[c] - b[c]\nconst compareByThen = (c, d) => (a, b) =>\n\tcompareBy(c)(a, b) === 0 ? compareBy(d)(a, b) : compareBy(c)(a, b)\nconst range = n => Array.from(Array(n).keys())\nconst isString = x => typeof x === \"string\" || x instanceof String\n\nclass RailFence extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: 3,\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tif (secret === 1) {\n\t\t\treturn plain\n\t\t}\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.reduce((a, x, i) => {\n\t\t\t\ta[zigzagmod(i, secret)] += x\n\t\t\t\treturn a\n\t\t\t}, copiesOf(secret, \"\"))\n\t\t\t.reduce((a, b) => a + b, \"\")\n\t}\n\n\tdecrypt = (secret, cipher) => {\n\t\tif (secret === 1) {\n\t\t\treturn cipher\n\t\t}\n\t\treturn range(cipher.length)\n\t\t\t.map(i => ({ i: i, z: zigzagmod(i, secret) }))\n\t\t\t.sort(compareByThen(\"z\", \"i\"))\n\t\t\t.map((a, i) => {\n\t\t\t\ta[\"c\"] = cipher[i]\n\t\t\t\treturn a\n\t\t\t})\n\t\t\t.sort(compareBy(\"i\"))\n\t\t\t.map(a => a[\"c\"])\n\t\t\t.join(\"\")\n\t}\n\n\tplainTextChange = event => {\n\t\tif (isString(this.state.secret)) {\n\t\t\tthis.setState({ plain: event.target.value })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: event.target.value,\n\t\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t\t})\n\t\t}\n\t}\n\tcipherTextChange = event => {\n\t\tif (isString(this.state.secret)) {\n\t\t\tthis.setState({ cipher: event.target.value })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t\t\tcipher: event.target.value\n\t\t\t})\n\t\t}\n\t}\n\tsecretChange = event => {\n\t\tconst v = event.target.value\n\t\tif (isNaN(v) || v === \"\" || Number.parseInt(v) <= 0) {\n\t\t\tthis.setState({ secret: v })\n\t\t\treturn\n\t\t}\n\t\tconst secret = Number.parseInt(v)\n\t\tif (this.state.mode === \"encrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: secret,\n\t\t\t\tcipher: this.encrypt(secret, this.state.plain)\n\t\t\t})\n\t\t}\n\t\tif (this.state.mode === \"decrypt\") {\n\t\t\tthis.setState({\n\t\t\t\tsecret: secret,\n\t\t\t\tplain: this.decrypt(secret, this.state.cipher)\n\t\t\t})\n\t\t}\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>Rail Fence Cipher</h2>\n\t\t\t\t<blockquote cite=\"https://en.wikipedia.org/wiki/Rail_fence_cipher\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe <strong>rail fence cipher</strong> (also called a{\" \"}\n\t\t\t\t\t\t<strong>zigzag cipher</strong>) is a form of{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Transposition_cipher\"\n\t\t\t\t\t\t\ttitle=\"Transposition cipher\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\ttransposition cipher\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t. It derives its name from the way in which it is encoded. --\n\t\t\t\t\t\twikipedia\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t\t<option value=\"decrypt\">Decrypt</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">Number of rails: </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\taria-invalid={isString(this.state.secret)}\n\t\t\t\t\t\tonChange={this.secretChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"decrypt\"}\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default RailFence\n","import React, { Component, Fragment } from \"react\"\n\nclass Columnar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tplain: \"\",\n\t\t\tcipher: \"\",\n\t\t\tsecret: \"\",\n\t\t\tmode: \"encrypt\"\n\t\t}\n\t}\n\n\tencrypt = (secret, plain) => {\n\t\tconst boxLength = secret.replace(/\\s/g, \"\").length\n\n\t\tif (boxLength < 2) {\n\t\t\treturn plain\n\t\t}\n\n\t\tconst xtraCharsNeeded =\n\t\t\t((-plain.length % boxLength) + boxLength + boxLength) % boxLength\n\n\t\treturn plain\n\t\t\t.split(\"\")\n\t\t\t.concat(Array.from(Array(xtraCharsNeeded), () => \"a\"))\n\t\t\t.reduce(\n\t\t\t\t(acc, cur, idx) => {\n\t\t\t\t\tacc[idx % boxLength][\"column\"] += cur\n\t\t\t\t\treturn acc\n\t\t\t\t},\n\t\t\t\tsecret\n\t\t\t\t\t.replace(/\\s/g, \"\")\n\t\t\t\t\t.split(\"\")\n\t\t\t\t\t.map(x => ({ char: x, column: \"\" }))\n\t\t\t)\n\t\t\t.sort((x, y) => x[\"char\"] > y[\"char\"])\n\t\t\t.map(x => x[\"column\"])\n\t\t\t.join(\"\")\n\t}\n\n\t// decrypt = (secret, cipher) => {\n\t//\n\t// }\n\n\tplainTextChange = event => {\n\t\t// if (this.state.mode === \"encrypt\") {\n\t\tthis.setState({\n\t\t\tplain: event.target.value,\n\t\t\tcipher: this.encrypt(this.state.secret, event.target.value)\n\t\t})\n\t\t// }\n\t}\n\tcipherTextChange = event => {\n\t\t// if (this.state.mode === \"decrypt\") {\n\t\t// \tthis.setState({\n\t\t// \t\tplain: this.decrypt(this.state.secret, event.target.value),\n\t\t// \t\tcipher: event.target.value\n\t\t// \t})\n\t\t// }\n\t}\n\tsecretChange = event => {\n\t\tconst secret = event.target.value\n\t\t// if (this.state.mode === \"encrypt\") {\n\t\tthis.setState({\n\t\t\tsecret: secret.replace(/[^A-z]/g, \"\"),\n\t\t\tcipher: this.encrypt(secret, this.state.plain)\n\t\t})\n\t\t// }\n\t\t// if (this.state.mode === \"decrypt\") {\n\t\t// \tthis.setState({\n\t\t// \t\tsecret: secret,\n\t\t// \t\tplain: this.decrypt(secret, this.state.cipher)\n\t\t// \t})\n\t\t// }\n\t}\n\thandleOptionChange = event => {\n\t\tthis.setState({\n\t\t\tmode: event.target.value\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2>Columnar Transposition</h2>\n\t\t\t\t<blockquote cite=\"https://en.wikipedia.org/wiki/Transposition_cipher#Columnar_transposition\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIn a{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://en.wikipedia.org/wiki/Transposition_cipher#Columnar_transposition\"\n\t\t\t\t\t\t\ttitle=\"Columnar Transposition\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tcolumnar transposition\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t, the message is written out in rows of a fixed length, and then\n\t\t\t\t\t\tread out again column by column, and the columns are chosen in some\n\t\t\t\t\t\tscrambled order. Both the width of the rows and the permutation of\n\t\t\t\t\t\tthe columns are usually defined by a keyword. -- wikipedia\n\t\t\t\t\t</p>\n\t\t\t\t</blockquote>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"mode\">What would you like to do?</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tonChange={this.handleOptionChange}\n\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\tid=\"mode\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"encrypt\">Encrypt</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"secret\">\n\t\t\t\t\t\tSecrey key: (usually short word or phrase){\" \"}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\tid=\"secret\"\n\t\t\t\t\t\ttype=\"input\"\n\t\t\t\t\t\tonChange={this.secretChange}\n\t\t\t\t\t\tvalue={this.state.secret}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"plain\">Decrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"plain\"\n\t\t\t\t\t\tonChange={this.plainTextChange}\n\t\t\t\t\t\tvalue={this.state.plain}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<label htmlFor=\"cipher\">Encrypted message: </label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"u-full-width\"\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tid=\"cipher\"\n\t\t\t\t\t\treadOnly={this.state.mode === \"encrypt\"}\n\t\t\t\t\t\tonChange={this.cipherTextChange}\n\t\t\t\t\t\tvalue={this.state.cipher}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\nexport default Columnar\n","import React from \"react\"\n\nconst PageNotFound = () => (\n\t<h2>Stop messing around trying to find secret pages...</h2>\n)\n\nexport default PageNotFound\n","import React, { Fragment } from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Home from \"./Home\"\nimport NavigationBar from \"./NavigationBar\"\nimport Substitution from \"./Substitution\"\nimport RailFence from \"./RailFence\"\nimport Columnar from \"./Columnar\"\nimport PageNotFound from \"./PageNotFound\"\n\nconst App = () => (\n\t<Fragment>\n\t\t<NavigationBar />\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t<Route path=\"/substitution\" component={Substitution} />\n\t\t\t<Route path=\"/railfence\" component={RailFence} />\n\t\t\t<Route path=\"/columnar\" component={Columnar} />\n\t\t\t<Route component={PageNotFound} />\n\t\t</Switch>\n\t</Fragment>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nconst app = (\n\t<BrowserRouter basename=\"/cryptography\">\n\t\t<App />\n\t</BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}